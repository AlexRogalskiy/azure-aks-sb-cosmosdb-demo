================ AKS ======================

Register Azure Account Features
-------------------------------
az provider register -n Microsoft.ContainerService
az provider register -n Microsoft.Network
az provider register -n Microsoft.Compute

Create/Delete Kubernetes RG and Cluster
---------------------------------------
az login --username <username> --password <password>

az group create `
  --resource-group RG-EastUS-AKS-VoterDemo `
  --location eastus

az aks create `
  --name AKS-Cluster-VoterDemo `
  --resource-group RG-EastUS-AKS-VoterDemo `
  --node-count 3 `
  --ssh-key-value "$HOME\.ssh\id_rsa.pub" `
  --kubernetes-version 1.8.2

  az aks get-credentials `
    --name AKS-Cluster-VoterDemo `
    --resource-group RG-EastUS-AKS-VoterDemo

az aks show `
  --name AKS-Cluster-VoterDemo `
  --resource-group RG-EastUS-AKS-VoterDemo

kubectl get nodes --output=wide

az aks delete `
  --name AKS-Cluster-VoterDemo `
  --resource-group RG-EastUS-AKS-VoterDemo

Install kubectl
---------------
az acs kubernetes install-cli  `
  --install-location C:\Users\gary.stafford\kubectl.exe

az acs kubernetes install-cli

Add to %PATH% Environment Variables

Kubernetes Dashboard
--------------------
az aks browse `
  --name AKS-Cluster-VoterDemo `
  --resource-group RG-EastUS-AKS-VoterDemo

Covert Docker Compose File with kompose
---------------------------------------
kompose convert -f docker-compose.yml

Other Commands
--------------
# Shell into Pod container
kubectl get pods
kubectl exec -it <pod> -- /bin/sh

# replace Service
kubectl apply -f <resource_file> --namespace=voter-api

kubectl replace --force -f <resource_file>

# delete pod (it will be replaced)
kubectl delete pod <pod>

# view logs
kubectl get pods
kubectl logs <pod>

kubectl get services
kubectl describe service <service_name>

kubectl config view
kubectl cluster-info
az aks get-versions `
  --name AKS-Cluster-VoterDemo `
  --resource-group RG-EastUS-AKS-VoterDemo

Secrets
=======
echo -n "mongodb://voterapp:<password>==@<subdomain>.documents.azure.com:10255/votes?ssl=true&replicaSet=globaldb" | base64
echo "<encoded string>" | base64 --decode

kubectl create -f .\azure-cosmosdb-candidate-secret.yaml
kubectl get secret

New Notes
=========
Login-AzureRmAccount
Get-AzureRMLocation

kubectl replace --force -f .\voter-deployment.yaml

sh ./sample_data_elections.sh
sh ./sample_data_candidates.sh

Cosmos DB
=========
https://docs.microsoft.com/en-us/azure/cosmos-db/create-mongodb-java
az cosmosdb create `
	--name voterapi `
	--resource-group RG-EastUS-AKS-VoterDemo `
	--location "East US=0" `
	--kind MongoDB `
	--debug

# Above command will automatically try to register resource provider below
az provider register -n Microsoft.DocumentDB
az provider show -n Microsoft.DocumentDB

az aks scale `
  --name AKS-Cluster-VoterDemo `
  --resource-group RG-EastUS-AKS-VoterDemo `
  --node-count 3

THIS WORKED
===========
https://gist.github.com/lmmendes/7fad9a2c8f389b39b6661d0945b72cb7
certbot certonly --standalone --preferred-challenges http --http-01-port 63443 -d api.voter-demo.com
certbot certonly --standalone --preferred-challenges http --http-01-port 63443 -d www.voter-demo.com,voter-demo.com
Restart HAProxy
---------------
haproxy -D -f /usr/local/etc/haproxy/haproxy.cfg -p /var/run/haproxy.pid -sf $(cat /var/run/haproxy.pid)

Combine private keys with PEM (letsencrypt/HAProxy Issue)
---------------------------------------------------------
https://stackoverflow.com/a/34336069/580268

kubectl cp gateway-7757cbcfd8-b65vx:/etc/letsencrypt/ .

Create secret for nginx ingress controller secret
-------------------------------------------------
kubectl create secret tls api-voter-demo-secret --key .\privkey1.pem --cert .\fullchain1.pem

nginx-ingress
-------------
kubectl create -f .\namespace.yaml
kubectl create secret tls api-voter-demo-secret ^
	--key ..\letsencrypt\archive\api.voter-demo.com\privkey1.pem ^
	--cert ..\letsencrypt\archive\api.voter-demo.com\fullchain1.pem ^
	--namespace=voter-api
